name: Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                pyinstaller -F -w -n PASTAQ-GUI -i resources/pastaq.icns src/app.py &&
                cd dist &&
                zip -r9 PASTAQ-GUI PASTAQ-GUI.app
            CMD_PASTAQ: pip install pastaq
            OUT_FILE_NAME: PASTAQ-GUI.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F -w -n PASTAQ-GUI -i resources/pastaq.ico src/app.py
            CMD_PASTAQ: >
                doskey if=echo "DONE" &&
                pip install wget &&
                python -m wget http://www.zlib.net/zlib-1.2.12.tar.gz &&
                tar -xvzf zlib-1.2.12.tar.gz &&
                cd zlib-1.2.12 &&
                cmake . &&
                cmake --build . --config Release --target install &&
                rm "C:/Program Files (x86)/zlib/lib/zlib.lib" &&
                cd .. &&
                pip install pastaq
            OUT_FILE_NAME: PASTAQ-GUI.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cmake
        pip install PyQt5
        pip install pyinstaller
    - name: Install PASTAQ for ${{matrix.TARGET}}
      run: ${{matrix.CMD_PASTAQ}}
    - name: Compile resources
      run: |
        cd src
        pyrcc5 -o resources.py resources.qrc
        cd ..
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
